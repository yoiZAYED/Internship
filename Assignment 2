# Grocery store inventory management system
#in this program we are going to use dictionay which is based on key value pair
# Create an empty inventory dictionary
inventory = {}
# Each item in the inventory will be represented as a dictionary with 'name', 'quantity', and 'price' keys.
# Example: {'name': 'Apple', 'quantity': 10, 'price': 1.5}

#Function to Add new items to the inventory:
def add_item(name, quantity, price):
    if name in inventory:
        print(f"Item '{name}' already exists in the inventory.")
    else:
        inventory[name] = {'quantity': quantity, 'price': price}
        print(f"Item '{name}' added to the inventory.")

#Function to Update existing items' quantities:
def update_quantity(name, new_quantity):
    if name in inventory:
        inventory[name]['quantity'] = new_quantity
        print(f"Quantity of '{name}' updated to {new_quantity}.")
    else:
        print(f"Item '{name}' does not exist in the inventory.")

#Function to View the current inventory:
def view_inventory():
    if not inventory:
        print("The inventory is empty.")
    else:
        print("Current Inventory:")
        for name, details in inventory.items():
            print(f"{name}: Quantity - {details['quantity']}, Price - ${details['price']}")

#Function to Remove items from the inventory:
def remove_item(name):
    if name in inventory:
        del inventory[name]
        print(f"Item '{name}' removed from the inventory.")
    else:
        print(f"Item '{name}' does not exist in the inventory.")

# Example of how it runs:
add_item("Apple", 20, 1.5)
add_item("Banana", 15, 0.75)
update_quantity("Apple", 25)
view_inventory()
remove_item("Banana")
view_inventory()
#else we can use a while loop for running it as many times as the restaurant owner needs.
